def almostIncreasingSequence(sequence):
    
    

    for idx, each in enumerate(sequence):
        idx == 1
        reduceValue = sequence[idx-1] - sequence[idx]
        print(reduceValue)
        
        if reduceValue < 0 :
            sequence.remove(sequence[idx])
            
        print(sequence)

    print(reduceValue)
    
    for idx, each in enumerate(sequence):
        idx == 1
        reduceValue = sequence[idx-1] - sequence[idx]
        print(reduceValue)

    if reduceValue > 0 :
        
       return True
       
    else :
        return False   
        
    return 
//  not complete yet ...... 


def almostIncreasingSequence(sequence):
    j = 0 #1
    temp = list(sequence)
    for i in range(1,len(sequence)):
        if j == 1:
            for k in range(1,len(temp)):
                if temp[k] <= temp[k-1]:
                    return False
            return True
		#2
        elif sequence[0] >= sequence[i]:
            del temp[0]
            j += 1
		#3
        elif sequence[i] <= sequence[i-1]:

            if sequence[i] <= sequence[i-2]:
                del temp[i]
            else:
                del temp[i-1]

            j += 1

    return True 
   // not complete yet
   // referred by https://chrisaor.github.io/algorithm/2018/01/29/Algorithm_AlmostIncreasingSequence.html
